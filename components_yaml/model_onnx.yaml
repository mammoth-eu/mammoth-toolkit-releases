# PIPELINE DEFINITION
# Name: model-onnx
# Inputs:
#    model_onnx__params: dict [Default: {}]
# Outputs:
#    loaded_model: system.Model
components:
  comp-model-onnx:
    executorLabel: exec-model-onnx
    inputDefinitions:
      parameters:
        model_onnx__params:
          defaultValue: {}
          isOptional: true
          parameterType: STRUCT
    outputDefinitions:
      artifacts:
        loaded_model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-model-onnx:
      container:
        args:
          - --executor_input
          - '{{$}}'
          - --function_to_execute
          - model_onnx
        command:
          - sh
          - -c
          - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'onnxruntime'\
          \ 'numpy' && \"$0\" \"$@\"\n"
          - python3
          - -m
          - kfp.dsl.executor_main
        image: mammotheu/loader_model_fairdemo:v010
pipelineInfo:
  name: model-onnx
root:
  dag:
    outputs:
      artifacts:
        loaded_model:
          artifactSelectors:
            - outputArtifactKey: loaded_model
              producerSubtask: model-onnx
    tasks:
      model-onnx:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-model-onnx
        inputs:
          parameters:
            model_onnx__params:
              componentInputParameter: model_onnx__params
        taskInfo:
          name: model-onnx
  inputDefinitions:
    parameters:
      model_onnx__params:
        defaultValue: {}
        isOptional: true
        parameterType: STRUCT
  outputDefinitions:
    artifacts:
      loaded_model:
        artifactType:
          schemaTitle: system.Model
          schemaVersion: 0.0.1
schemaVersion: 2.1.0
sdkVersion: kfp-2.4.0
